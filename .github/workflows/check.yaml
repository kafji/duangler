# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: Check

on:
  push:
  pull_request:

jobs:
  rust-test:
    strategy:
      matrix:
        runner: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 5
    env:
      RUST_BACKTRACE: full
      RUST_LOG: debug
    steps:
      - uses: actions/checkout@v4

      - name: Restore Cargo cache
        uses: actions/cache@v3
        with:
          # https://doc.rust-lang.org/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-${{ hashFiles('./Cargo.toml', './Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}

      - name: Test
        working-directory: ./rs
        run: cargo test

  go-test:
    strategy:
      matrix:
        runner: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5

      - name: Test
        working-directory: ./go
        run: go test ./...

  go-build-windows:
    needs: go-test
    runs-on: windows-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5

      - name: Build
        working-directory: ./go
        run: build.bat

  go-build-linux:
    needs: go-test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5

      - name: Install libevdev
        run: sudo apt-get -y install libevdev-dev

      - name: Build
        working-directory: ./go
        run: build.sh
